"use strict";(self.webpackChunkbublik_release=self.webpackChunkbublik_release||[]).push([[3420],{166:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"configuration/report-config/index","title":"Report","description":"- Format","source":"@site/docs/03-configuration/02-report-config/index.md","sourceDirName":"03-configuration/02-report-config","slug":"/configuration/report-config/","permalink":"/bublik-release/configuration/report-config/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Report"},"sidebar":"defaultSidebar","previous":{"title":"Project","permalink":"/bublik-release/configuration/project-config/"},"next":{"title":"Publish","permalink":"/bublik-release/publish/"}}');var t=i(5813),s=i(3546);const o={title:"Report"},l="Report Configuration",a={},c=[{value:"Format",id:"format",level:2},{value:"Core Fields",id:"core-fields",level:3},{value:"Test Configuration Fields",id:"test-configuration-fields",level:3},{value:"Example Configuration",id:"example-configuration",level:3},{value:"Understanding the Example",id:"understanding-the-example",level:2},{value:"Location",id:"location",level:2},{value:"Configuration Guidelines",id:"configuration-guidelines",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Details:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"report-configuration",children:"Report Configuration"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#format",children:"Format"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#core-fields",children:"Core Fields"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#test-configuration-fields",children:"Test Configuration Fields"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#example-configuration",children:"Example Configuration"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#understanding-the-example",children:"Understanding the Example"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#location",children:"Location"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"#configuration-guidelines",children:"Configuration Guidelines"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"To build a run report, an appropriate configuration is required."}),"\n",(0,t.jsx)(n.h2,{id:"format",children:"Format"}),"\n",(0,t.jsxs)(n.p,{children:["You can find the active schema definition at: ",(0,t.jsx)(n.a,{href:"https://github.com/ts-factory/bublik/blob/main/bublik/data/schemas/report.json",children:"URL"})]}),"\n",(0,t.jsxs)(i,{children:[(0,t.jsx)("summary",{children:"JSON Schema"}),(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "$schema": "http://json-schema.org/draft-07/schema#",\n  "type": "object",\n  "properties": {\n      "title_content": {\n          "description": "Metas for title genegation",\n          "type": "array",\n          "items": {\n              "description": "Meta with label type",\n              "type": "string"\n          },\n          "minItems": 1,\n          "uniqueItems": true\n      },\n      "test_names_order": {\n          "description": "Test names for tests sorting",\n          "type": "array",\n          "items": {\n              "description": "Test name",\n              "type": "string"\n          },\n          "minItems": 1,\n          "uniqueItems": true\n      },\n      "tests": {\n          "type": "object",\n          "additionalProperties": {\n              "type": "object",\n              "properties": {\n                  "table_view": {\n                      "description": "Table view flag",\n                      "type": "boolean"\n                  },\n                  "chart_view": {\n                      "description": "Chart view flag",\n                      "type": "boolean"\n                  },\n                  "axis_x": {\n                      "description": "Axis x test argument",\n                      "type": "object",\n                      "properties": {\n                          "arg": {\n                              "type": "string",\n                              "minLength": 1\n                          },\n                          "label": {\n                              "type": "string",\n                              "minLength": 1\n                          }\n                      },\n                      "required": [\n                          "arg"\n                      ]\n                  },\n                  "axis_y": {\n                      "description": "Measurement parameters",\n                      "type": "array",\n                      "items": {\n                          "type": "object",\n                          "properties": {\n                              "tool": {\n                                  "type": "array",\n                                  "items": {\n                                      "type": "string"\n                                  }\n                              },\n                              "type": {\n                                  "type": "array",\n                                  "items": {\n                                      "type": "string"\n                                  }\n                              },\n                              "name": {\n                                  "type": "array",\n                                  "items": {\n                                      "type": "string"\n                                  }\n                              },\n                              "aggr": {\n                                  "type": "array",\n                                  "items": {\n                                      "type": "string"\n                                  }\n                              },\n                              "keys": {\n                                  "type": "object",\n                                  "additionalProperties": {\n                                      "type": "array",\n                                      "items": {\n                                          "type": "string"\n                                      }\n                                  }\n                              }\n                          },\n                          "additionalProperties": false\n                      }\n                  },\n                  "sequences": {\n                      "description": "Sequences settings",\n                      "type": "object",\n                      "properties": {\n                          "arg": {\n                              "description": "Specify an argument for displaying iteration results on the same axes",\n                              "type": ["string"]\n                          },\n                          "arg_label": {\n                              "description": "Specify label to display the sequense group argument",\n                              "type": ["string"]\n                          },\n                          "percentage_base_value": {\n                              "description": "Base value for percentage calculation",\n                              "type": ["string", "number"]\n                          },\n                          "arg_vals_labels": {\n                              "description": "Specify labels to display the sequense group argument values",\n                              "type": "object",\n                              "additionalProperties": true\n                          }\n                      },\n                      "required": [\n                          "arg"\n                      ]\n                  },\n                  "not_show_args": {\n                      "description": "Arguments and their values for excluding results from the report",\n                      "type": "object",\n                      "additionalProperties": {\n                          "type": "array",\n                          "items": {\n                              "type": "string"\n                          }\n                      }\n                  },\n                  "records_order": {\n                      "description": "Test names list for records sorting",\n                      "type": "array",\n                      "items": {\n                          "type": "string"\n                      }\n                  }\n              },\n              "required": [\n                  "table_view",\n                  "chart_view",\n                  "axis_x",\n                  "axis_y",\n                  "not_show_args",\n                  "records_order"\n              ]\n          }\n      }\n  },\n  "required": [\n      "title_content",\n      "test_names_order",\n      "tests"\n  ],\n  "additionalProperties": false\n}\n'})})]}),"\n",(0,t.jsx)(n.p,{children:"The configuration file must be in JSON format and include the following mandatory fields:"}),"\n",(0,t.jsx)(n.h3,{id:"core-fields",children:"Core Fields"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"id"}),": Unique identifier for the report configuration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"}),": Descriptive name of the report configuration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"description"}),": Detailed explanation of the report's purpose"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"version"}),": Version identifier of the configuration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"title_content"}),": List of metadata fields to be displayed in the report title"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"test_names_order"}),": Ordered list of test names for sorting"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tests"}),": Object containing test configurations"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"test-configuration-fields",children:"Test Configuration Fields"}),"\n",(0,t.jsxs)(n.p,{children:["Each test configuration under the ",(0,t.jsx)(n.code,{children:"tests"})," object must include:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"table_view"}),": Boolean flag indicating if tabular view should be enabled"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"chart_view"}),": Boolean flag indicating if chart view should be enabled"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"axis_x"}),": Test argument to be used for X-axis in charts and tables"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"axis_y"}),": List of measurement parameter configurations, where each configuration includes:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"type"}),': List of measurement types (e.g., "throughput")']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"keys"}),": Dictionary of key-value pairs for filtering (e.g., ",(0,t.jsx)(n.code,{children:'{"Side": ["Rx"]}'}),")"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"aggr"}),': List of aggregation methods (e.g., ["mean"])']}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sequence_group_arg"}),": Test argument used to group measurement results into sequences"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"percentage_base_value"}),": Reference value for percentage calculations within sequence groups"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sequence_name_conversion"}),": Dictionary mapping sequence argument values to display names"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"not_show_args"}),": Dictionary of test arguments and their values to exclude from the report"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"records_order"}),": List of test arguments defining the sorting order of reports"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "tests": {\n    "testpmd_rxonly": {\n      "axis_x": {\n        "arg": "packet_size",\n        "label": "Packet Size"\n      },\n      "axis_y": [\n        {\n          "keys": {\n            "Side": ["Rx"]\n          },\n          "type": ["throughput"]\n        },\n        {\n          "aggr": ["mean"],\n          "keys": {\n            "Side": ["Rx"]\n          },\n          "type": ["pps"]\n        }\n      ],\n      "chart_view": true,\n      "table_view": true,\n      "not_show_args": {},\n      "records_order": [],\n      "sequence_group_arg": "testpmd_arg_rxq",\n      "percentage_base_value": 1,\n      "sequence_name_conversion": {}\n    },\n    "testpmd_txonly": {\n      "axis_x": {\n        "arg": "testpmd_command_txpkts",\n        "label": "Packet Size"\n      },\n      "axis_y": [\n        {\n          "keys": {\n            "Side": ["Tx"]\n          },\n          "type": ["throughput"]\n        },\n        {\n          "aggr": ["mean"],\n          "keys": {\n            "Side": ["Tx"]\n          },\n          "type": ["pps"]\n        }\n      ],\n      "chart_view": true,\n      "table_view": true,\n      "not_show_args": {},\n      "records_order": [],\n      "sequence_group_arg": "testpmd_arg_txq",\n      "percentage_base_value": 1,\n      "sequence_name_conversion": {}\n    }\n  },\n  "title_content": ["CAMPAIGN_DATE", "CFG"],\n  "test_names_order": ["testpmd_txonly", "testpmd_rxonly"]\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"understanding-the-example",children:"Understanding the Example"}),"\n",(0,t.jsx)(n.p,{children:"Let's break down the key components of this example:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Basic Information"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The configuration is for DPDK Ethernet device testing"}),"\n",(0,t.jsx)(n.li,{children:'It has ID 1 and version "v1"'}),"\n",(0,t.jsx)(n.li,{children:"Title will include campaign date, configuration, SSN, XDP hardware checksum, and link aggregation information"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Test Configuration"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'Configured for a single test: "testpmd_rxonly"'}),"\n",(0,t.jsx)(n.li,{children:"Both table and chart views are enabled"}),"\n",(0,t.jsx)(n.li,{children:"X-axis represents packet size"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Measurements"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Tracking throughput measurements"}),"\n",(0,t.jsx)(n.li,{children:"Only considering Rx (receive) side data"}),"\n",(0,t.jsx)(n.li,{children:"Using mean aggregation for values"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Sequence Groups"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'Groups based on "testpmd_arg_burst"'}),"\n",(0,t.jsx)(n.li,{children:"Base value of 32 for percentage calculations"}),"\n",(0,t.jsx)(n.li,{children:'Maps burst sizes to readable names (e.g., "32" \u2192 "32 packets")'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Filtering"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'Excludes specific flow control settings ("off")'}),"\n",(0,t.jsx)(n.li,{children:"Filters out certain RX core counts (1 and 4)"}),"\n",(0,t.jsx)(n.li,{children:"Omits specific packet sizes from results"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Ordering"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Results ordered by flow control, RX cores, and RX queue parameters"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"location",children:"Location"}),"\n",(0,t.jsxs)(n.p,{children:["All run report configuration files must be stored in the ",(0,t.jsx)(n.code,{children:"<PER_CONF_DIR>/reports"})," directory."]}),"\n",(0,t.jsx)(n.h2,{id:"configuration-guidelines",children:"Configuration Guidelines"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Keep IDs unique across configurations"}),"\n",(0,t.jsx)(n.li,{children:"Use descriptive names that reflect the test suite"}),"\n",(0,t.jsx)(n.li,{children:"Include version information for tracking changes"}),"\n",(0,t.jsx)(n.li,{children:"Select title content fields that provide relevant context"}),"\n",(0,t.jsx)(n.li,{children:"Configure axes based on the most important test parameters"}),"\n",(0,t.jsx)(n.li,{children:"Use meaningful sequence names for better readability"}),"\n",(0,t.jsx)(n.li,{children:"Carefully consider which arguments to exclude to keep reports focused"}),"\n",(0,t.jsx)(n.li,{children:"Order records logically for easy analysis"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["For more examples and templates, refer to the ",(0,t.jsx)(n.em,{children:"report_config.json"})," file in your installation."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},3546:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var r=i(9729);const t={},s=r.createContext(t);function o(e){const n=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);