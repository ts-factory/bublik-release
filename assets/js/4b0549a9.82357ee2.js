"use strict";(self.webpackChunkbublik_release=self.webpackChunkbublik_release||[]).push([[3391],{3546:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>o});var t=i(9729);const r={},s=t.createContext(r);function a(n){const e=t.useContext(s);return t.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:a(n.components),t.createElement(s.Provider,{value:e},n.children)}},8727:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"configuration/project-config/index","title":"Project","description":"- Update config from UI","source":"@site/docs/03-configuration/01-project-config/index.md","sourceDirName":"03-configuration/01-project-config","slug":"/configuration/project-config/","permalink":"/bublik-release/configuration/project-config/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Project"},"sidebar":"defaultSidebar","previous":{"title":"Glossary Of Terms","permalink":"/bublik-release/configuration/glossary-of-terms/"},"next":{"title":"Report","permalink":"/bublik-release/configuration/report-config/"}}');var r=i(5813),s=i(3546);const a={title:"Project"},o="Project Configuration",l={},c=[{value:"Update config from UI",id:"update-config-from-ui",level:2},{value:"Format",id:"format",level:2},{value:"Example Configuration",id:"example-configuration",level:3},{value:"Per-project Conception",id:"per-project-conception",level:2},{value:"Configuration Areas",id:"configuration-areas",level:2},{value:"Dashboard Configuration",id:"dashboard-configuration",level:3},{value:"DASHBOARD_HEADER",id:"dashboard_header",level:4},{value:"DASHBOARD_PAYLOAD",id:"dashboard_payload",level:4},{value:"DASHBOARD_ROWS_STYLE",id:"dashboard_rows_style",level:4},{value:"DASHBOARD_DATE",id:"dashboard_date",level:4},{value:"DASHBOARD_RUNS_SORT",id:"dashboard_runs_sort",level:4},{value:"DASHBOARD_DEFAULT_MODE",id:"dashboard_default_mode",level:4},{value:"Metadata Configuration",id:"metadata-configuration",level:3},{value:"Metadata on Pages",id:"metadata-on-pages",level:4},{value:"Special Categories",id:"special-categories",level:4},{value:"Run Configuration",id:"run-configuration",level:3},{value:"Run Completion File",id:"run-completion-file",level:4},{value:"Run Uniqueness",id:"run-uniqueness",level:4},{value:"Applying Changes",id:"applying-changes",level:2},{value:"Configuration Updates",id:"configuration-updates",level:3},{value:"CSRF Configuration",id:"csrf-configuration",level:3}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components},{Details:i}=e;return i||function(n,e){throw new Error("Expected "+(e?"component":"object")+" `"+n+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"project-configuration",children:"Project Configuration"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#update-config-from-ui",children:"Update config from UI"})}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"#format",children:"Format"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#example-configuration",children:"Example Configuration"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#per-project-conception",children:"Per-project Conception"})}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"#configuration-areas",children:"Configuration Areas"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"#dashboard-configuration",children:"Dashboard Configuration"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#dashboard_header",children:"DASHBOARD_HEADER"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#dashboard_payload",children:"DASHBOARD_PAYLOAD"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#dashboard_rows_style",children:"DASHBOARD_ROWS_STYLE"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#dashboard_date",children:"DASHBOARD_DATE"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#dashboard_runs_sort",children:"DASHBOARD_RUNS_SORT"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#dashboard_default_mode",children:"DASHBOARD_DEFAULT_MODE"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"#metadata-configuration",children:"Metadata Configuration"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#metadata-on-pages",children:"Metadata on Pages"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#special-categories",children:"Special Categories"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"#run-configuration",children:"Run Configuration"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#run-completion-file",children:"Run Completion File"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#run-uniqueness",children:"Run Uniqueness"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.a,{href:"#applying-changes",children:"Applying Changes"})," - ",(0,r.jsx)(e.a,{href:"#configuration-updates",children:"Configuration Updates"})," - ",(0,r.jsx)(e.a,{href:"#csrf-configuration",children:"CSRF Configuration"})]}),"\n"]}),"\n",(0,r.jsx)(e.h2,{id:"update-config-from-ui",children:"Update config from UI"}),"\n",(0,r.jsx)(e.h2,{id:"format",children:"Format"}),"\n",(0,r.jsxs)(e.p,{children:["You can find the active schema definition at: ",(0,r.jsx)(e.a,{href:"https://github.com/ts-factory/bublik/blob/main/bublik/data/schemas/report.json",children:"URL"})]}),"\n",(0,r.jsxs)(i,{children:[(0,r.jsx)("summary",{children:"JSON Schema"}),(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n  "$schema": "http://json-schema.org/draft-07/schema#",\n  "type": "object",\n  "properties": {\n    "PROJECT": {\n      "description": "Identifies project matching PROJECT meta in metadata.json",\n      "type": "string"\n    },\n    "UI_VERSION": {\n      "description": "Default UI version",\n      "type": "number"\n    },\n    "EMAIL_PROJECT_WATCHERS": {\n      "description": "List of emails to notify about importruns failures",\n      "type": "array",\n      "items": {\n        "type": "string"\n      },\n      "uniqueItems": true\n    },\n    "DASHBOARD_HEADER": {\n      "description": "Sets columns on dashboard",\n      "type": "array",\n      "items": {\n        "type": "object",\n        "properties": {\n          "key": {\n            "type": "string"\n          },\n          "label": {\n            "type": "string"\n          }\n        },\n        "additionalProperties": false\n      }\n    },\n    "DASHBOARD_PAYLOAD": {\n      "description": "Sets link available by click on column values",\n      "type": "object",\n      "additionalProperties": {\n        "type": "string",\n        "items": {\n          "type": "string"\n        }\n      }\n    },\n    "DASHBOARD_DATE": {\n      "description": "Represents the name of the meta pointing to which date the run is related to",\n      "type": "string"\n    },\n    "DASHBOARD_RUNS_SORT": {\n      "description": "Represents a list of DASHBOARD_HEADER keys and extra \'start\' key which defines run start",\n      "type": "array",\n      "items": {\n        "type": "string"\n      },\n      "uniqueItems": true\n    },\n    "DASHBOARD_DEFAULT_MODE": {\n      "description": "Sets the mode (one_day_one_column/one_day_two_columns/two_days_two_columns) which dashboard follows when opens",\n      "type": "string"\n    },\n    "METADATA_ON_PAGES": {\n      "description": "Represents a list of meta category names that manages columns in the history and runs page",\n      "type": "array",\n      "items": {\n        "type": "string"\n      },\n      "uniqueItems": true\n    },\n    "SPECIAL_CATEGORIES": {\n      "description": "Represents a list of meta category names that defines extra data to show in Info block on run and log pages",\n      "type": "array",\n      "items": {\n        "type": "string"\n      },\n      "uniqueItems": true\n    },\n    "RUN_STATUS_META": {\n      "description": "Represents meta name in meta_data.json that defines run status",\n      "type": "string"\n    },\n    "RUN_STATUS_BY_NOK_BORDERS": {\n      "description": "Represents 2 float numbers (left and right borders) that sets borders for defining run status by rate of unexpected results",\n      "type": "array",\n      "items": {\n        "type": "number"\n      },\n      "uniqueItems": true,\n      "minItems": 2,\n      "maxItems": 2\n    },\n    "RUN_COMPLETE_FILE": {\n      "description": "Represents file available via run source link that indicates that run testing was completed",\n      "type": "string"\n    },\n    "RUN_KEY_METAS": {\n      "description": "Represents meta name in meta_data.json that allows Bublik to distinguish one run from another",\n      "type": "array",\n      "items": {\n        "type": "string"\n      },\n      "uniqueItems": true\n    },\n    "FILES_TO_GENERATE_METADATA": {\n      "description": "Represents a list of files available via run source link and allows Bublik to generate meta_data.json based on them",\n      "type": "array",\n      "items": {\n        "type": "string"\n      },\n      "uniqueItems": true\n    },\n    "CSRF_TRUSTED_ORIGINS": {\n      "description": "Domens which Bublik server trusts accepting requests coming from",\n      "type": "array",\n      "items": {\n        "type": "string"\n      },\n      "uniqueItems": true\n    },\n    "HISTORY_SEARCH_EXAMPLE": {\n      "description": "An example of history search for performance checking",\n      "type": "object",\n      "properties": {\n        "testName": {\n          "type": "string"\n        },\n        "startDate": {\n          "type": "string"\n        },\n        "finishDate": {\n          "type": "string"\n        },\n        "runData": {\n          "type": "string"\n        },\n        "tags": {\n          "type": "string"\n        },\n        "labels": {\n          "type": "string"\n        },\n        "revisions": {\n          "type": "string"\n        },\n        "branches": {\n          "type": "string"\n        },\n        "testArgs": {\n          "type": "string"\n        },\n        "verdict": {\n          "type": "string"\n        },\n        "tagExpr": {\n          "type": "string"\n        },\n        "labelExpr": {\n          "type": "string"\n        },\n        "revisionExpr": {\n          "type": "string"\n        },\n        "branchExpr": {\n          "type": "string"\n        },\n        "testArgExpr": {\n          "type": "string"\n        },\n        "verdictExpr": {\n          "type": "string"\n        }\n      },\n      "required": ["testName", "startDate", "finishDate"]\n    },\n    "NOT_PERMISSION_REQUIRED_ACTIONS": {\n      "description": "Actions that should not require administrator rights in this project",\n      "type": "array",\n      "items": {\n        "type": "string"\n      },\n      "uniqueItems": true\n    }\n  },\n  "required": [\n    "PROJECT",\n    "RUN_STATUS_META",\n    "RUN_KEY_METAS",\n    "DASHBOARD_HEADER",\n    "RUN_COMPLETE_FILE"\n  ],\n  "additionalProperties": false\n}\n'})})]}),"\n",(0,r.jsx)(e.h3,{id:"example-configuration",children:"Example Configuration"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n  "PROJECT": "ts-factory",\n  "RUN_KEY_METAS": ["START_TIMESTAMP", "CFG"],\n  "DASHBOARD_DATE": "CAMPAIGN_DATE",\n  "RUN_STATUS_META": "RUN_STATUS",\n  "DASHBOARD_HEADER": [\n    {\n      "key": "iut",\n      "label": "IUT"\n    },\n    {\n      "key": "notes",\n      "label": "Notes"\n    },\n    {\n      "key": "total",\n      "label": "Total"\n    },\n    {\n      "key": "status",\n      "label": "Status"\n    },\n    {\n      "key": "ts_name",\n      "label": "Test Suite"\n    },\n    {\n      "key": "variant",\n      "label": "Variant"\n    },\n    {\n      "key": "progress",\n      "label": "Executed"\n    },\n    {\n      "key": "unexpected",\n      "label": "NOK"\n    },\n    {\n      "key": "configuration",\n      "label": "Configuration"\n    }\n  ],\n  "DASHBOARD_PAYLOAD": {\n    "notes": "go_bug",\n    "total": "go_tree",\n    "unexpected": "go_run_failed",\n    "configuration": "go_run"\n  },\n  "METADATA_ON_PAGES": ["Test Suite", "Configuration"],\n  "RUN_COMPLETE_FILE": ".done",\n  "SPECIAL_CATEGORIES": ["Configuration"],\n  "DASHBOARD_RUNS_SORT": ["start"],\n  "CSRF_TRUSTED_ORIGINS": [],\n  "DASHBOARD_DEFAULT_MODE": "two_days_two_columns",\n  "EMAIL_PROJECT_WATCHERS": [],\n  "RUN_STATUS_BY_NOK_BORDERS": [20, 80]\n}\n'})}),"\n",(0,r.jsx)(e.h2,{id:"per-project-conception",children:"Per-project Conception"}),"\n",(0,r.jsxs)(e.p,{children:["All ",(0,r.jsx)(e.strong,{children:"metas"})," that users can apply to customize their Bublik pages originate from ",(0,r.jsx)(e.code,{children:"metadata.json"}),". ",(0,r.jsx)(e.strong,{children:"Tags"})," are special metas that come from TE log and cannot be modified within Bublik."]}),"\n",(0,r.jsx)(e.h2,{id:"configuration-areas",children:"Configuration Areas"}),"\n",(0,r.jsx)(e.h3,{id:"dashboard-configuration",children:"Dashboard Configuration"}),"\n",(0,r.jsxs)(e.p,{children:["The dashboard table is fully configurable through the following settings in ",(0,r.jsx)(e.code,{children:"perconf.py"}),":"]}),"\n",(0,r.jsx)(e.h4,{id:"dashboard_header",children:"DASHBOARD_HEADER"}),"\n",(0,r.jsx)(e.p,{children:"Defines columns on the dashboard. Each column represents values of metas from its dedicated category, with special keys:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.code,{children:"total"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.code,{children:"total_expected"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.code,{children:"progress"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.code,{children:"unexpected"})}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"These special keys show extended data that Bublik generates internally. The setting is represented as a dictionary where keys are common to all dashboard settings (user-defined) and values are meta category names."}),"\n",(0,r.jsx)(e.h4,{id:"dashboard_payload",children:"DASHBOARD_PAYLOAD"}),"\n",(0,r.jsx)(e.p,{children:"Configures actions triggered when clicking column cells, typically navigating to another view:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"go_run"}),": Navigate to run details"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"go_run_failed"}),": Navigate to run details with failed results displayed"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"go_tree"}),": Navigate to run tests as a tree with logs and context"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"go_bug"}),": Navigate to bug in repository"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"go_source"}),": Navigate to source from which the run was imported"]}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:["This setting is represented as a dictionary mapping ",(0,r.jsx)(e.code,{children:"DASHBOARD_HEADER"})," keys to the actions listed above."]}),"\n",(0,r.jsx)(e.h4,{id:"dashboard_rows_style",children:"DASHBOARD_ROWS_STYLE"}),"\n",(0,r.jsx)(e.p,{children:"Controls row coloring:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Set to ",(0,r.jsx)(e.code,{children:"'colored'"})," for colored rows"]}),"\n",(0,r.jsx)(e.li,{children:"Default: not set\nNote: Only works in UI-V1; UI-V2 uses a common row coloring style."}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"dashboard_date",children:"DASHBOARD_DATE"}),"\n",(0,r.jsx)(e.p,{children:"Specifies the meta name indicating which date the run relates to (useful for runs spanning multiple days)."}),"\n",(0,r.jsx)(e.h4,{id:"dashboard_runs_sort",children:"DASHBOARD_RUNS_SORT"}),"\n",(0,r.jsxs)(e.p,{children:["Defines default column sorting order. Accepts a list of ",(0,r.jsx)(e.code,{children:"DASHBOARD_HEADER"})," keys plus the special ",(0,r.jsx)(e.code,{children:"'start'"})," key for run start time."]}),"\n",(0,r.jsx)(e.h4,{id:"dashboard_default_mode",children:"DASHBOARD_DEFAULT_MODE"}),"\n",(0,r.jsx)(e.p,{children:"Sets the default dashboard view mode (UI-V2 only):"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.code,{children:"one_day_one_column"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.code,{children:"one_day_two_columns"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.code,{children:"two_days_two_columns"})}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"metadata-configuration",children:"Metadata Configuration"}),"\n",(0,r.jsx)(e.h4,{id:"metadata-on-pages",children:"Metadata on Pages"}),"\n",(0,r.jsxs)(e.p,{children:["The ",(0,r.jsx)(e.strong,{children:"Metadata"})," column on history and runs pages is controlled by ",(0,r.jsx)(e.code,{children:"METADATA_ON_PAGES"})," in ",(0,r.jsx)(e.code,{children:"perconf.py"}),", which accepts a list of meta category names."]}),"\n",(0,r.jsx)(e.h4,{id:"special-categories",children:"Special Categories"}),"\n",(0,r.jsxs)(e.p,{children:["Extra project data in the ",(0,r.jsx)(e.strong,{children:"Info"})," block on log and run pages is managed by ",(0,r.jsx)(e.code,{children:"SPECIAL_CATEGORIES"})," in ",(0,r.jsx)(e.code,{children:"perconf.py"}),", which accepts a list of meta category names."]}),"\n",(0,r.jsx)(e.h3,{id:"run-configuration",children:"Run Configuration"}),"\n",(0,r.jsx)(e.h4,{id:"run-completion-file",children:"Run Completion File"}),"\n",(0,r.jsxs)(e.p,{children:["The ",(0,r.jsx)(e.code,{children:"RUN_COMPLETE_FILE"})," setting in ",(0,r.jsx)(e.code,{children:"perconf.py"})," specifies the filename (accessed via run source link) that indicates test completion."]}),"\n",(0,r.jsx)(e.h4,{id:"run-uniqueness",children:"Run Uniqueness"}),"\n",(0,r.jsxs)(e.p,{children:["Bublik distinguishes runs using metas defined in ",(0,r.jsx)(e.code,{children:"RUN_KEY_METAS"})," setting in ",(0,r.jsx)(e.code,{children:"perconf.py"}),", represented as a list of meta names."]}),"\n",(0,r.jsx)(e.h2,{id:"applying-changes",children:"Applying Changes"}),"\n",(0,r.jsx)(e.h3,{id:"configuration-updates",children:"Configuration Updates"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["For ",(0,r.jsx)(e.code,{children:"meta.conf"})," or ",(0,r.jsx)(e.code,{children:"tags.conf"})," changes:"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Send HTTP request: ",(0,r.jsx)(e.code,{children:"GET: <bublik-web>/meta_categorization"})]}),"\n",(0,r.jsxs)(e.li,{children:["Example: ",(0,r.jsx)(e.a,{href:"https://ts-factory.io/bublik/meta_categorization",children:"https://ts-factory.io/bublik/meta_categorization"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["For ",(0,r.jsx)(e.code,{children:"perconf.py"})," or ",(0,r.jsx)(e.code,{children:"references.py"})," changes:"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:["Restart server: ",(0,r.jsx)(e.code,{children:"./scripts/deploy --steps run_server"})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsxs)(e.p,{children:["For dashboard settings changes in ",(0,r.jsx)(e.code,{children:"meta.conf"})," or ",(0,r.jsx)(e.code,{children:"perconf.py"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Clear cache by clicking the clock icon in upper right corner"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Important"}),": After any configuration changes, reload web pages using ",(0,r.jsx)(e.code,{children:"Ctrl + Shift + R"})]}),"\n",(0,r.jsx)(e.h3,{id:"csrf-configuration",children:"CSRF Configuration"}),"\n",(0,r.jsx)(e.p,{children:'To resolve "CSRF verification failed" in POST requests on hosted Bublik instances:'}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-python",children:"# Configure trusted origins for CSRF verification\n# More details: https://docs.djangoproject.com/en/3.0/ref/settings/#csrf-trusted-origins\nCSRF_TRUSTED_ORIGINS = ['ts-factory.io']\n"})})]})}function h(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}}}]);